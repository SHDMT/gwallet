// Code generated by protoc-gen-go. DO NOT EDIT.
// source: wallet.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MsgBucket struct {
	Mci                  uint64   `protobuf:"varint,1,opt,name=mci" json:"mci,omitempty"`
	StableMessagesUnit   [][]byte `protobuf:"bytes,2,rep,name=stableMessagesUnit,proto3" json:"stableMessagesUnit,omitempty"`
	StableMessages       [][]byte `protobuf:"bytes,3,rep,name=stableMessages,proto3" json:"stableMessages,omitempty"`
	StableMessagesID     []uint32 `protobuf:"varint,4,rep,packed,name=stableMessagesID" json:"stableMessagesID,omitempty"`
	FeeUTXOs             [][]byte `protobuf:"bytes,5,rep,name=feeUTXOs,proto3" json:"feeUTXOs,omitempty"`
	Completed            bool     `protobuf:"varint,6,opt,name=completed" json:"completed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgBucket) Reset()         { *m = MsgBucket{} }
func (m *MsgBucket) String() string { return proto.CompactTextString(m) }
func (*MsgBucket) ProtoMessage()    {}
func (*MsgBucket) Descriptor() ([]byte, []int) {
	return fileDescriptor_wallet_a94b5a531e2564ef, []int{0}
}
func (m *MsgBucket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgBucket.Unmarshal(m, b)
}
func (m *MsgBucket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgBucket.Marshal(b, m, deterministic)
}
func (dst *MsgBucket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBucket.Merge(dst, src)
}
func (m *MsgBucket) XXX_Size() int {
	return xxx_messageInfo_MsgBucket.Size(m)
}
func (m *MsgBucket) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBucket.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBucket proto.InternalMessageInfo

func (m *MsgBucket) GetMci() uint64 {
	if m != nil {
		return m.Mci
	}
	return 0
}

func (m *MsgBucket) GetStableMessagesUnit() [][]byte {
	if m != nil {
		return m.StableMessagesUnit
	}
	return nil
}

func (m *MsgBucket) GetStableMessages() [][]byte {
	if m != nil {
		return m.StableMessages
	}
	return nil
}

func (m *MsgBucket) GetStableMessagesID() []uint32 {
	if m != nil {
		return m.StableMessagesID
	}
	return nil
}

func (m *MsgBucket) GetFeeUTXOs() [][]byte {
	if m != nil {
		return m.FeeUTXOs
	}
	return nil
}

func (m *MsgBucket) GetCompleted() bool {
	if m != nil {
		return m.Completed
	}
	return false
}

type State struct {
	Mci                  uint64   `protobuf:"varint,1,opt,name=mci" json:"mci,omitempty"`
	ValidUnits           [][]byte `protobuf:"bytes,2,rep,name=validUnits,proto3" json:"validUnits,omitempty"`
	InvalidUnits         [][]byte `protobuf:"bytes,3,rep,name=invalidUnits,proto3" json:"invalidUnits,omitempty"`
	FeeUTXOs             [][]byte `protobuf:"bytes,4,rep,name=feeUTXOs,proto3" json:"feeUTXOs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *State) Reset()         { *m = State{} }
func (m *State) String() string { return proto.CompactTextString(m) }
func (*State) ProtoMessage()    {}
func (*State) Descriptor() ([]byte, []int) {
	return fileDescriptor_wallet_a94b5a531e2564ef, []int{1}
}
func (m *State) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_State.Unmarshal(m, b)
}
func (m *State) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_State.Marshal(b, m, deterministic)
}
func (dst *State) XXX_Merge(src proto.Message) {
	xxx_messageInfo_State.Merge(dst, src)
}
func (m *State) XXX_Size() int {
	return xxx_messageInfo_State.Size(m)
}
func (m *State) XXX_DiscardUnknown() {
	xxx_messageInfo_State.DiscardUnknown(m)
}

var xxx_messageInfo_State proto.InternalMessageInfo

func (m *State) GetMci() uint64 {
	if m != nil {
		return m.Mci
	}
	return 0
}

func (m *State) GetValidUnits() [][]byte {
	if m != nil {
		return m.ValidUnits
	}
	return nil
}

func (m *State) GetInvalidUnits() [][]byte {
	if m != nil {
		return m.InvalidUnits
	}
	return nil
}

func (m *State) GetFeeUTXOs() [][]byte {
	if m != nil {
		return m.FeeUTXOs
	}
	return nil
}

type Message struct {
	Message              []byte   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	UnitHash             []byte   `protobuf:"bytes,2,opt,name=unitHash,proto3" json:"unitHash,omitempty"`
	MessageID            uint32   `protobuf:"varint,3,opt,name=messageID" json:"messageID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_wallet_a94b5a531e2564ef, []int{2}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (dst *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(dst, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Message) GetUnitHash() []byte {
	if m != nil {
		return m.UnitHash
	}
	return nil
}

func (m *Message) GetMessageID() uint32 {
	if m != nil {
		return m.MessageID
	}
	return 0
}

type Response struct {
	Response             uint32   `protobuf:"varint,1,opt,name=response" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_wallet_a94b5a531e2564ef, []int{3}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetResponse() uint32 {
	if m != nil {
		return m.Response
	}
	return 0
}

func init() {
	proto.RegisterType((*MsgBucket)(nil), "proto.MsgBucket")
	proto.RegisterType((*State)(nil), "proto.State")
	proto.RegisterType((*Message)(nil), "proto.Message")
	proto.RegisterType((*Response)(nil), "proto.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WalletClient is the client API for Wallet service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WalletClient interface {
	ReceiveMessage(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Response, error)
	UpdateStates(ctx context.Context, in *State, opts ...grpc.CallOption) (*Response, error)
	UpdateMCI(ctx context.Context, in *MsgBucket, opts ...grpc.CallOption) (*Response, error)
}

type walletClient struct {
	cc *grpc.ClientConn
}

func NewWalletClient(cc *grpc.ClientConn) WalletClient {
	return &walletClient{cc}
}

func (c *walletClient) ReceiveMessage(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.Wallet/ReceiveMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletClient) UpdateStates(ctx context.Context, in *State, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.Wallet/UpdateStates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *walletClient) UpdateMCI(ctx context.Context, in *MsgBucket, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/proto.Wallet/UpdateMCI", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WalletServer is the server API for Wallet service.
type WalletServer interface {
	ReceiveMessage(context.Context, *Message) (*Response, error)
	UpdateStates(context.Context, *State) (*Response, error)
	UpdateMCI(context.Context, *MsgBucket) (*Response, error)
}

func RegisterWalletServer(s *grpc.Server, srv WalletServer) {
	s.RegisterService(&_Wallet_serviceDesc, srv)
}

func _Wallet_ReceiveMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServer).ReceiveMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Wallet/ReceiveMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServer).ReceiveMessage(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _Wallet_UpdateStates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(State)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServer).UpdateStates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Wallet/UpdateStates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServer).UpdateStates(ctx, req.(*State))
	}
	return interceptor(ctx, in, info, handler)
}

func _Wallet_UpdateMCI_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgBucket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServer).UpdateMCI(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Wallet/UpdateMCI",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServer).UpdateMCI(ctx, req.(*MsgBucket))
	}
	return interceptor(ctx, in, info, handler)
}

var _Wallet_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Wallet",
	HandlerType: (*WalletServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReceiveMessage",
			Handler:    _Wallet_ReceiveMessage_Handler,
		},
		{
			MethodName: "UpdateStates",
			Handler:    _Wallet_UpdateStates_Handler,
		},
		{
			MethodName: "UpdateMCI",
			Handler:    _Wallet_UpdateMCI_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "wallet.proto",
}

func init() { proto.RegisterFile("wallet.proto", fileDescriptor_wallet_a94b5a531e2564ef) }

var fileDescriptor_wallet_a94b5a531e2564ef = []byte{
	// 343 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x52, 0x4d, 0x4b, 0xc3, 0x40,
	0x14, 0x24, 0x4d, 0x3f, 0x1f, 0x69, 0x2d, 0xef, 0xb4, 0x14, 0x91, 0x90, 0x43, 0x09, 0x82, 0x01,
	0xf5, 0x1f, 0x68, 0x0f, 0xf6, 0x50, 0x84, 0xd5, 0xa2, 0x17, 0x0f, 0xdb, 0xf4, 0x59, 0x83, 0x69,
	0x12, 0xba, 0xdb, 0x8a, 0x7f, 0xc5, 0xbf, 0xe6, 0x9f, 0x91, 0x6c, 0x36, 0x69, 0x63, 0x7b, 0xca,
	0x9b, 0xd9, 0x61, 0x32, 0xb3, 0xfb, 0xc0, 0xf9, 0x12, 0x71, 0x4c, 0x2a, 0xc8, 0x36, 0xa9, 0x4a,
	0xb1, 0xa5, 0x3f, 0xde, 0xaf, 0x05, 0xbd, 0x99, 0x5c, 0xdd, 0x6d, 0xc3, 0x4f, 0x52, 0x38, 0x04,
	0x7b, 0x1d, 0x46, 0xcc, 0x72, 0x2d, 0xbf, 0xc9, 0xf3, 0x11, 0x03, 0x40, 0xa9, 0xc4, 0x22, 0xa6,
	0x19, 0x49, 0x29, 0x56, 0x24, 0xe7, 0x49, 0xa4, 0x58, 0xc3, 0xb5, 0x7d, 0x87, 0x9f, 0x38, 0xc1,
	0x31, 0x0c, 0xea, 0x2c, 0xb3, 0xb5, 0xf6, 0x1f, 0x8b, 0x97, 0x30, 0xac, 0x33, 0xd3, 0x09, 0x6b,
	0xba, 0xb6, 0xdf, 0xe7, 0x47, 0x3c, 0x8e, 0xa0, 0xfb, 0x4e, 0x34, 0x7f, 0x7e, 0x7d, 0x94, 0xac,
	0xa5, 0xdd, 0x2a, 0x8c, 0xe7, 0xd0, 0x0b, 0xd3, 0x75, 0x16, 0x93, 0xa2, 0x25, 0x6b, 0xbb, 0x96,
	0xdf, 0xe5, 0x7b, 0xc2, 0xfb, 0x86, 0xd6, 0x93, 0x12, 0x8a, 0x4e, 0x14, 0xbb, 0x00, 0xd8, 0x89,
	0x38, 0x5a, 0xe6, 0xa9, 0xa5, 0x29, 0x74, 0xc0, 0xa0, 0x07, 0x4e, 0x94, 0x1c, 0x28, 0x8a, 0x1a,
	0x35, 0xae, 0x16, 0xac, 0x59, 0x0f, 0xe6, 0xbd, 0x41, 0xc7, 0x54, 0x40, 0x06, 0x9d, 0x75, 0x31,
	0xea, 0x00, 0x0e, 0x2f, 0x61, 0x6e, 0xb0, 0x4d, 0x22, 0xf5, 0x20, 0xe4, 0x07, 0x6b, 0xe8, 0xa3,
	0x0a, 0xe7, 0xcd, 0x8c, 0x6c, 0x3a, 0x61, 0xb6, 0x6b, 0xf9, 0x7d, 0xbe, 0x27, 0xbc, 0x31, 0x74,
	0x39, 0xc9, 0x2c, 0x4d, 0xa4, 0x76, 0xd9, 0x98, 0x59, 0xff, 0xa0, 0xcf, 0x2b, 0x7c, 0xf3, 0x63,
	0x41, 0xfb, 0x45, 0xbf, 0x3b, 0x5e, 0xc3, 0x80, 0x53, 0x48, 0xd1, 0xae, 0xbc, 0x5b, 0x1c, 0x14,
	0xbb, 0x10, 0x18, 0x3c, 0x3a, 0x33, 0xb8, 0x72, 0xbe, 0x02, 0x67, 0x9e, 0x2d, 0x85, 0x22, 0x7d,
	0x8b, 0x12, 0x1d, 0x23, 0xd0, 0xf0, 0x58, 0x1e, 0x40, 0xaf, 0x90, 0xcf, 0xee, 0xa7, 0x38, 0x2c,
	0xcd, 0xcb, 0xed, 0x3a, 0xd2, 0x2f, 0xda, 0x1a, 0xdf, 0xfe, 0x05, 0x00, 0x00, 0xff, 0xff, 0x2d,
	0x38, 0x5d, 0x6e, 0x9a, 0x02, 0x00, 0x00,
}
